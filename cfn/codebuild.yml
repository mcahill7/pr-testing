AWSTemplateFormatVersion: 2010-09-09
Description: Run tests/code coverage against pull requests using codebuild and events
Parameters:
  GitRepoUrl:
    Type: String
    Description: URL of GitRepo
    Default: https://github.com/mcahill7/pr-testing
  ProjectName:
    Type: String
    Description: Project Name for codebuild
    Default: mcahill-demo

Resources:

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-build
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        Location: !Ref GitRepoUrl
        BuildSpec: buildspec-ci.yml
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED,PULL_REQUEST_REOPENED
            - Type: BASE_REF
              Pattern: ^refs/heads/master$
              ExcludeMatchedPattern: false
          - - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/heads/.*

  LambdaTrigger:
    Type: AWS::Events::Rule
    Properties:
      Description: Update GitHub Status after CodeBuild completes
      EventPattern:
        detail:
          build-status:
          - SUCCEEDED
          - FAILED
          - STOPPED
          project-name:
            - !Ref CodeBuildProject
        detail-type:
        - CodeBuild Build State Change
        source:
        - aws.codebuild
      Name: codebuild-ci-notification
      RoleArn: !GetAtt CodeBuildRole.Arn
      State: ENABLED
      Targets:
      - Arn: !ImportValue mcahill-lambda-LambdaArn
        Id: Update-GitHub-Status

  S3Bucket:
    Type: AWS::S3::Bucket

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - lambda.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies:
        - PolicyName: CodeBuildAllow
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DeleteLogGroup
                  - logs:DeleteLogStream
                  - logs:PutLogEvents
                  - lambda:Invoke*
                  - lambda:Get*
                  - events:PutRule
                  - events:PutEvents
                  - events:PutTargets
                Resource: '*'
              -
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                Resource: !Sub arn:aws:s3:::${S3Bucket}/*

Outputs:
  RoleArn:
    Description: Role Arn
    Value: !GetAtt CodeBuildRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodeBuildRoleArn

  EventArn:
    Description: Event Arn
    Value: !GetAtt LambdaTrigger.Arn
    Export:
      Name: !Sub ${AWS::StackName}-LambdaTriggerArn